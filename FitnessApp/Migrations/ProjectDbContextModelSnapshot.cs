// <auto-generated />
using System;
using FitnessApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApp.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessApp.Models.Achievements", b =>
                {
                    b.Property<int>("RealizareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealizareId"));

                    b.Property<DateTime>("DataRealizare")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipRealizare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RealizareId");

                    b.HasIndex("UserID");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("FitnessApp.Models.Exercices", b =>
                {
                    b.Property<int>("ExID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExID"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeEx")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExID");

                    b.ToTable("Exercices");
                });

            modelBuilder.Entity("FitnessApp.Models.ExerciseTraining", b =>
                {
                    b.Property<int>("ExerciseTrainingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseTrainingID"));

                    b.Property<int>("ExID")
                        .HasColumnType("int");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.HasKey("ExerciseTrainingID");

                    b.HasIndex("ExID");

                    b.HasIndex("ProgramID");

                    b.ToTable("ExerciseTraining");
                });

            modelBuilder.Entity("FitnessApp.Models.MealPlan", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"));

                    b.Property<DateTime>("DataPlan")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescrierePlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("nrCalorii")
                        .HasColumnType("int");

                    b.HasKey("PlanID");

                    b.HasIndex("UserID");

                    b.ToTable("MealPlan");
                });

            modelBuilder.Entity("FitnessApp.Models.Measurements", b =>
                {
                    b.Property<int>("IdMasurare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMasurare"));

                    b.Property<decimal>("CircSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CircTalie")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Greutate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Inaltime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("IdMasurare");

                    b.HasIndex("UserID");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("FitnessApp.Models.Training", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramID"));

                    b.Property<DateTime>("DataIncepere")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSf")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ProgramID");

                    b.HasIndex("UserID");

                    b.ToTable("Training");
                });

            modelBuilder.Entity("FitnessApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("ContactNr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FitnessApp.Models.Achievements", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.ExerciseTraining", b =>
                {
                    b.HasOne("FitnessApp.Models.Exercices", "Exercices")
                        .WithMany("ExerciseTraining")
                        .HasForeignKey("ExID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitnessApp.Models.Training", "Training")
                        .WithMany("ExerciseTraining")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercices");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("FitnessApp.Models.MealPlan", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("MealPlans")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.Measurements", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("Measurements")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.Training", b =>
                {
                    b.HasOne("FitnessApp.Models.User", "User")
                        .WithMany("Trainings")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessApp.Models.Exercices", b =>
                {
                    b.Navigation("ExerciseTraining");
                });

            modelBuilder.Entity("FitnessApp.Models.Training", b =>
                {
                    b.Navigation("ExerciseTraining");
                });

            modelBuilder.Entity("FitnessApp.Models.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("MealPlans");

                    b.Navigation("Measurements");

                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
